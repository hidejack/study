;dll 文件的编写
                .386
                .model  flat,stdcall
                option  casemap:none

;--------------------------------------------------------------------------------------
;include
;--------------------------------------------------------------------------------------
include         windows.inc
;--------------------------------------------------------------------------------------
;data sengment
;--------------------------------------------------------------------------------------
                .data?
dwCounter       dd              ?
;--------------------------------------------------------------------------------------
;code segment
;--------------------------------------------------------------------------------------
                .code
;--------------------------------------------------------------------------------------
;dll的入口函数 这里即是动态链接库的入口点
;dwReason ：本次调用的原因，一共四种情况
;   1. DLL_PROCESS_ATTACH 动态链接库刚被映射到某个进程的地址空间，程序可以在这里做初始化的工作。返回TRUE表示初始化成果，返回FLASE表示初始化失败，此时库装入失败
;   2. DLL_PROCESS_DETACH 表示动态链接库将被卸载，这里释放资源。在库生命周期只出现一次
;   3. DLL_THREAD_ATTACH 表示应用程序创建了一个新的线程，某个线程正常终止的时候，dwReason的值是DLL_PROCESS_DETACH
;   4. 
; hInstanceDll 是动态链接库的模块实例句柄。获取这个句柄唯一的途径就是在入口函数被调用的时候保存这个参数！
; dwReserved 是系统保留的参数，可以不必理会
; 这里使用 getModuleHandle 获取的是应用程序的实例句柄，而非动态链接库的实例句柄
;--------------------------------------------------------------------------------------
DllEntry        proc            hInstanceDll,_dwReason,_dwReserved
                mov             eax,TRUE
                ret
DllEntry        endp
;*********************************************************************************************
;本函数在dll内部使用，功能为将数值限制在0-10之间
;*********************************************************************************************
_CheckCounter   proc

                mov             eax,dwCounter
                cmp             eax,0
                jge             @F              ;大于等于跳转
                xor             eax,eax         ;按位异或，相同取0不同取1
                @@:
                cmp             eax,10
                jle             @F              ;小于等于
                mov             eax,10          ;@@ 可做标号，@F表示本条指令后第一条@@
                @@:                             ;@B 表示本条指令前面第一条@@指令
                mov             dwCounter,eax   ;@标号只针对masm
                ret

_CheckCounter   endp
;*********************************************************************************************
;dll的导出函数之一
;*********************************************************************************************
_IncCounter     proc

                inc             dwCounter
                call            _CheckCounter
                ret

_IncCounter     endp
;*********************************************************************************************
;dll的导出函数之二
;*********************************************************************************************
_DecCounter     proc

                dec             dwCounter
                call            _CheckCounter
                ret

_DecCounter     endp
;*********************************************************************************************
;dll的导出函数之三
;*********************************************************************************************
_Mod            proc            uses ecx edx _dwNumber1,_dwNumber2

                xor             edx,edx
                mov             eax,_dwNumber1
                mov             ecx,_dwNumber2
                .if             ecx
                                div         ecx
                                mov         eax,edx
                .endif
                ret

_Mod            endp
;*********************************************************************************************
                end             DllEntry