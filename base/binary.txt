	▪	二进制相关知识：
1.原码：第一位表示符号，其余位表示值。因此取值范围为：
（以8位二进制为例）
［11111111，01111111］——> ［－127，127］

2.反码    注意两点：
2.1）正数的反码是其本身
2.2）负数的反码在原码基础上，符号位不变，其余位取反
例：
［10000001］反码为 ［11111110］
［00000001］反码为［00000001］

3.补码：
3.1）正数的补码就是其本身
3.2）负数的补码在原码基础上，符号位不变，其余位取反，然后＋1。即：其反码＋1
例：
［10000001］原＝ ［11111110］反＝［11111111］补
［00000001］补码为［00000001］

机器数：用最高位0表示正，1表示负，计算机内部表示形式称为机器数
真值：机器外部用正负号表示的数称为真值
编码：将一个真值表示成二进制字串的机器数的过程就是编码


	✓	java中的二进制：
1.按位与（&）：见0得0
作用：1.清零  2.取指定位数
例：x＝1010 1010 取x的低4位，x&0000 1111 即可得到低4位：1010

2.按位或（｜）：见1得1
作用：将对应位指定为1
例：x＝1010 0000的低4位置1，x｜0000 1111 即可得到：1010 1111

3.异或运算（^）：两个相应位为“异”，则该位结果为1，同则为0
作用：
3.1）使指定位翻转（用1）
例：X＝1010 1010 低4位翻转 X^0000 1111 即可翻转低4位得到：1010 0101
3.2）与0相异或，保留原值
3.3）变量之间进行交换值
例：A＝1000 1111  B＝1010 0000
A＝A^B；B＝A^B；A＝A^B；
A：0010 1111  B：1010 0000
A：0010 1111  B：1000 1111
A：1010 0000  B：1000 1111

4.位移运算：
<<:左移运算  
 将运算对象的二进制位左移若干位，左边丢弃，低位补0   相当于乘2操作（移一位）

>>:右移运算   
将运算对象的二进制位右移若干位，正数左补0，负数左补1，右丢弃   相当于除以2操作（移1位）

>>>:无符号右移运算
将运算对象的二进制位右移若干位，无论正负，左补0，右丢弃  

负数以其正数的补码形势表示 即负数的补码就是其绝对值对应的正数








